/* 除了储存方式不同，原始值和引用值在通过变量复制时也有所不同。在通过变量把一个原始值赋值到另一个变量时，原始值会复制到新变量的位置。请看下面的例子: */
let num1 = 5;
let num2 =num1
/* 这里，null包含数值5。当把num2初始化为num1时，num2也会得到数值5.这个值跟存储在num1中的5是完全独立的，因为它是那个值的副本 */

/* 在把引用值从一个变量赋值给另一个变量时，存储在变量中的值也会被赋值到新变量所在的位置。区别在于，这里复制的值实际是一个指针，它指向存储在堆内存中的对象。
    操作完成后，两个变量实际上指向同一个对象，因此一个对象上面的变化会在另一个对象反映出来，如下面的例子所示：
*/
let obj1 = new Object()
let obj2 = obj1
obj1.name = 'Nicholas'
console.log(obj2.name); // Nicholas
/* 
    在这个例子中，变量obj1保存了一个新对象的实例。然后，这个值被复制到obj2，此时两个变量都指向了同一个对象。
    再给obj1创建属性name并赋值后，通过obj2也可以访问这个属性，因为它们都指向同一个对象
*/